<###############################################################################
# Get-CsmeVulnerabilityStatus.ps1
#
# Change Log:
# 1.0 - 2020-03-07 - Initial Script Written. Web only for now.
###############################################################################>

<#
    .Synopsis
        This script checks the system for vulnerable Intel CSME Firmware.
    .Description
        This script can run in several ways. It can download the utility directly from the Intel website. I can also download the utility from a specified UNC path. The status will be displayed on the console window.
    .Example
        Get-CsmeVulnerabilityStatus -DownloadFromWeb
    .Example
        Get-CsmeVulnerabilityStatus -DownloadFromSmb -SmbPath \\foo\bar\utility.zip
    .Parameter DownloadFromWeb
        Using this argument tells the script to download the utility from the Intel website.
    .Parameter DownloadFromSmb
        Using this argument tells the script to download the utility from a UNC path. The -SmbPath argument must also be used.
    .Parameter SmbPath
        This argument is used with DownloadFromSmb and is the full UNC path to the utility including the filename.
    .Link
        https://arstechnica.com/information-technology/2020/03/5-years-of-intel-cpus-and-chipsets-have-a-concerning-flaw-thats-unfixable/
    .Link
        https://www.intel.com/content/www/us/en/support/articles/000033416/technologies.html
    .Link
        https://downloadcenter.intel.com/download/28632/Intel-Converged-Security-and-Management-Engine-Intel-CSME-Detection-Tool
#>

# Because the utility must run as administrator, we add the corresponding Requires statement.
#Requires -RunAsAdministrator

# Defining the parameters for the script to run.
Param(
    [CmdletBinding()]
    [Parameter(Mandatory=$false,Position=0)]
    [Switch]$DownloadFromWeb,

    [Parameter(Mandatory=$false,Position=0)]
    [Switch]$DownloadFromSmb,

    [Parameter(Mandatory=$false,Position=1)]
    [String]$SmbPath
    )

# The script was run with the DownloadFromWeb argument.
if($DownloadFromWeb)
{
    # Set a couple of variables that we will use.
    $WebUrl = "https://downloadmirror.intel.com/28632/eng/CSME_Version_Detection_Tool_Windows.zip"
    $TargetFileName = "CsmeDetectionTool.zip"

    # Generate a random temporary working directory name.
    $TempDir = -join ((48..57) *120 | Get-Random -Count 8 | ForEach-Object{[char]$_})

    #Create the random directory in C:\.
    New-Item -ItemType Directory -Path C:\ -Name $TempDir

    # Move the script into the newly created working directory.
    Set-Location C:\$TempDir
    Clear-Host

    # Download the detection tool from the Intel websites.
    Write-Host "Downloading the utility, please wait."
    Invoke-WebRequest -Uri $WebUrl -OutFile $TargetFileName

    # Unzip the utility.
    Expand-Archive -Path $TargetFileName

    # Change into the utilities directory.
    Set-Location .\CsmeDetectionTool\DiscoveryTool

    # Run the utility.
    .\CSME-Version-Detection-Tool-console.exe

    # Clean up the console window.
    Clear-Host

    # Print the result to the terminal based on the output of the utility.
    Switch ($LASTEXITCODE)
    {
        0 {Write-Host "Platform is not vulnerable" -ForegroundColor Green}
        10 {Write-Host "Intel® ME driver is not installed on the platform. Unable to determine platform vulnerability."}
        11 {Write-Output "Error communicating with the Intel® ME driver. Unable to determine platform vulnerability."}
        100 {Write-Host "Platform is vulnerable." -ForegroundColor Red}
        101 {Write-Host "Platform is not vulnerable, it has been patched" -ForegroundColor Green}
        102 {Write-Host "This platform is no longer supported. No firmware update is available for security issues."}
        200 {Write-Host "Unable to determine platform vulnerability"}
    }

    # Set location to the root of C:
    Set-Location C:\

    # Delete the working directory.
    Remove-Item $TempDir -Recurse -Force

    # Change directory back to where the script was run from. (In case you launched it from a command prompt.)
    Set-Location $PSScriptRoot
}

# The script was run with the DownloadFromSmb argument.
if($DownloadFromSmb)
{
    if($SmbPath)
    {
        Clear-Host
        Write-Host "This feature is not yet implemented." -ForegroundColor Red
    }
    else 
    {
        Clear-Host
        Write-Host "You must specity a valid SMB URL with the -SmbPath argument." -ForegroundColor Red
    }
}

# The script was run without either the -DownloadFromWeb or -DownloadFromSub arguments.
if (!($DownloadFromWeb) -And !($DownloadFromSmb))
{   Clear-Host
    Write-Host "Please pass either the -DownloadFromWeb or -DownloadFromSmb arguments. " -ForegroundColor Red
    Write-Host "Run 'Get-Help .\GetCsmeVulnerabilityStatus.ps1 -Detailed' for more information"
}